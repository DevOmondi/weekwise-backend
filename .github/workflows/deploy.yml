name: Deploy to DigitalOcean

on:
  push:
    branches: [ main ]  # Trigger deployment on push to main branch
  workflow_dispatch:    # Allow manual trigger

env:
  DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  HOST: ${{ secrets.DROPLET_HOST }}
  USERNAME: ${{ secrets.DROPLET_USERNAME }}
  NODE_ENV: production

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        env:
          NODE_ENV: test

      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts

      - name: Deploy to DigitalOcean
        run: |
          # Connect and run deployment commands
          ssh $USERNAME@$HOST << 'ENDSSH'
            # Navigate to app directory
            cd ~/app

            # Pull latest changes
            git pull origin main

            # Install dependencies
            npm ci --production

            # Run database migrations
            npx sequelize-cli db:migrate

            # Build the application (if needed)
            npm run build

            # Restart the application (assuming PM2 is used)
            pm2 restart all
          ENDSSH

      - name: Verify Deployment
        run: |
          # Wait for the application to start
          sleep 10
          # You can add additional health check commands here
          
      - name: Cleanup SSH key
        run: rm -rf ~/.ssh
        if: always()  # Run this step even if previous steps fail

      - name: Notify on failure
        if: failure()
        run: |
          echo "Deployment failed!"
          # Add notification commands (e.g., sending to Slack) here